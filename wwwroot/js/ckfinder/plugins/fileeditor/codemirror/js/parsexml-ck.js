/* This file defines an XML parser, with a few kludges to make it
 * useable for HTML. autoSelfClosers defines a set of tag names that
 * are expected to not have a closing tag, and doNotIndent specifies
 * the tags inside of which no indentation should happen (see Config
 * object). These can be disabled by passing the editor an object like
 * {useHTMLKludges: false} as parserConfig option.
 */var XMLParser=Editor.Parser=function(){function s(e){function h(e){for(var t=e.length-1;t>=0;t--)o.push(e[t])}function p(){h(arguments);c=!0}function d(){h(arguments);c=!1}function v(){s.style+=" xml-error"}function m(e){return function(t,n){if(n==e)p();else{v();p(arguments.callee)}}}function g(e,t){var r=n.doNotIndent.hasOwnProperty(e)||l&&l.noIndent;l={prev:l,name:e,indent:a,startOfLine:t,noIndent:r}}function y(){l=l.prev}function b(e){return function(t,n){var i=e;if(i&&i.noIndent)return n;if(r&&/<!\[CDATA\[/.test(t))return 0;i&&/^<\//.test(t)&&(i=i.prev);while(i&&!i.startOfLine)i=i.prev;return i?i.indent+indentUnit:0}}function w(){return d(S,w)}function S(e,t){if(t=="<")p(x,C,N(u==1));else if(t=="</")p(T,m(">"));else if(e=="xml-cdata"){(!l||l.name!="!cdata")&&g("!cdata");/\]\]>$/.test(t)&&y();p()}else if(E.hasOwnProperty(e))p();else{v();p()}}function x(e,t){if(e=="xml-name"){f=t.toLowerCase();s.style="xml-tagname";p()}else{f=null;d()}}function T(e,t){if(e=="xml-name"){s.style="xml-tagname";l&&t.toLowerCase()==l.name?y():v()}p()}function N(e){return function(t,r){if(r=="/>"||r==">"&&n.autoSelfClosers.hasOwnProperty(f))p();else if(r==">"){g(f,e);p()}else{v();p(arguments.callee)}}}function C(e){if(e=="xml-name"){s.style="xml-attname";p(k,C)}else d()}function k(e,t){t=="="?p(L):t==">"||t=="/>"?d(N):d()}function L(e){e=="xml-attribute"?p(L):d()}var t=i(e),s,o=[w],u=0,a=0,f=null,l=null,c,E={"xml-text":!0,"xml-entity":!0,"xml-comment":!0,"xml-processing":!0,"xml-doctype":!0};return{indentation:function(){return a},next:function(){s=t.next();s.style=="whitespace"&&u==0?a=s.value.length:u++;if(s.content=="\n"){a=u=0;s.indentation=b(l)}if(s.style=="whitespace"||s.type=="xml-comment")return s;for(;;){c=!1;o.pop()(s.style,s.content);if(c)return s}},copy:function(){var e=o.concat([]),n=t.state,r=l,s=this;return function(f){o=e.concat([]);u=a=0;l=r;t=i(f,n);return s}}}}var e={autoSelfClosers:{br:!0,img:!0,hr:!0,link:!0,input:!0,meta:!0,col:!0,frame:!0,base:!0,area:!0},doNotIndent:{pre:!0,"!cdata":!0}},t={autoSelfClosers:{},doNotIndent:{"!cdata":!0}},n=e,r=!1,i=function(){function e(e,n){var i=e.next();if(i=="<"){if(e.equals("!")){e.next();if(e.equals("[")){if(e.lookAhead("[CDATA[",!0)){n(r("xml-cdata","]]>"));return null}return"xml-text"}if(e.lookAhead("--",!0)){n(r("xml-comment","-->"));return null}if(e.lookAhead("DOCTYPE",!0)){e.nextWhileMatches(/[\w\._\-]/);n(r("xml-doctype",">"));return"xml-doctype"}return"xml-text"}if(e.equals("?")){e.next();e.nextWhileMatches(/[\w\._\-]/);n(r("xml-processing","?>"));return"xml-processing"}e.equals("/")&&e.next();n(t);return"xml-punctuation"}if(i=="&"){while(!e.endOfLine())if(e.next()==";")break;return"xml-entity"}e.nextWhileMatches(/[^&<\n]/);return"xml-text"}function t(t,r){var i=t.next();if(i==">"){r(e);return"xml-punctuation"}if(/[?\/]/.test(i)&&t.equals(">")){t.next();r(e);return"xml-punctuation"}if(i=="=")return"xml-punctuation";if(/[\'\"]/.test(i)){r(n(i));return null}t.nextWhileMatches(/[^\s\u00a0=<>\"\'\/?]/);return"xml-name"}function n(e){return function(n,r){while(!n.endOfLine())if(n.next()==e){r(t);break}return"xml-attribute"}}function r(t,n){return function(r,i){while(!r.endOfLine()){if(r.lookAhead(n,!0)){i(e);break}r.next()}return t}}return function(t,n){return tokenizer(t,n||e)}}();return{make:s,electricChars:"/",configure:function(i){i.useHTMLKludges!=null&&(n=i.useHTMLKludges?e:t);i.alignCDATA&&(r=i.alignCDATA)}}}();