/* Tokenizer for CSharp code */var tokenizeCSharp=function(){function e(e,t){var n=!1,r;while(!e.endOfLine()){var r=e.next();if(r==t&&!n)return!1;n=!n&&r=="\\"}return n}function s(e,t){return function(n,r){var i=e,u=o(e,t,n,function(e){i=e}),a=u.type=="operator"||u.type=="keyword c"||u.type.match(/^[\[{}\(,;:]$/);(a!=t||i!=e)&&r(s(i,a));return u}}function o(s,o,u,a){function f(){u.next();u.nextWhileMatches(r);return{type:"number",style:"csharp-atom"}}function l(){u.nextWhileMatches(/[0-9]/);if(u.equals(".")){u.next();u.nextWhileMatches(/[0-9]/)}if(u.equals("e")||u.equals("E")){u.next();u.equals("-")&&u.next();u.nextWhileMatches(/[0-9]/)}return{type:"number",style:"csharp-atom"}}function c(){u.nextWhileMatches(i);var e=u.get(),n=t.hasOwnProperty(e)&&t.propertyIsEnumerable(e)&&t[e];return n?{type:n.type,style:n.style,content:e}:{type:"variable",style:"csharp-variable",content:e}}function h(){e(u,"/");u.nextWhileMatches(/[gi]/);return{type:"regexp",style:"csharp-string"}}function p(e){var t="/*",n=e=="*";for(;;){if(u.endOfLine())break;var r=u.next();if(r=="/"&&n){t=null;break}n=r=="*"}a(t);return{type:"comment",style:"csharp-comment"}}function d(){u.nextWhileMatches(n);return{type:"operator",style:"csharp-operator"}}function v(t){var n=e(u,t);a(n?t:null);return{type:"string",style:"csharp-string"}}if(s=='"'||s=="'")return v(s);var m=u.next();if(s=="/*")return p(m);if(m=='"'||m=="'")return v(m);if(/[\[\]{}\(\),;\:\.]/.test(m))return{type:m,style:"csharp-punctuation"};if(m=="0"&&(u.equals("x")||u.equals("X")))return f();if(/[0-9]/.test(m))return l();if(m=="/"){if(u.equals("*")){u.next();return p(m)}if(u.equals("/")){e(u,null);return{type:"comment",style:"csharp-comment"}}return o?h():d()}if(m=="#"){e(u,null);return{type:"comment",style:"csharp-comment"}}return n.test(m)?d():c()}var t=function(){function e(e,t){return{type:e,style:"csharp-"+t}}var t=e("keyword a","keyword"),n=e("keyword b","keyword"),r=e("keyword c","keyword"),i=e("operator","keyword"),s=e("atom","atom"),o=e("keyword d","keyword");return{"if":t,"while":t,"with":t,"else":n,"do":n,"try":n,"finally":n,"return":r,"break":r,"continue":r,"new":r,"delete":r,"throw":r,"in":i,"typeof":i,"instanceof":i,"var":e("var","keyword"),"function":e("function","keyword"),"catch":e("catch","keyword"),"for":e("for","keyword"),"switch":e("switch","keyword"),"case":e("case","keyword"),"default":e("default","keyword"),"true":s,"false":s,"null":s,"class":e("class","keyword"),namespace:e("class","keyword"),"public":o,"private":o,"protected":o,internal:o,extern:o,override:o,virtual:o,"abstract":o,"static":o,out:o,ref:o,"const":o,foreach:e("for","keyword"),using:r,"int":o,"double":o,"long":o,bool:o,"char":o,"void":o,string:o,"byte":o,sbyte:o,decimal:o,"float":o,uint:o,ulong:o,object:o,"short":o,ushort:o,get:o,set:o,value:o}}(),n=/[+\-*&%=<>!?|]/,r=/[0-9A-Fa-f]/,i=/[\w\$_]/;return function(e,t){return tokenizer(e,t||s(!1,!0))}}();